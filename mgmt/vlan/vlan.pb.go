// Copyright (c) 2020 Pawel Maslanka
// Contact: pawmas.pawelmaslanka@gmail.com
// This file is subject to the terms and conditions defined in
// file 'LICENSE.txt', which is part of this source code package.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.0-devel
// 	protoc        v3.11.0
// source: vlan/vlan.proto

package vlan

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	interfaces "opennos-eth-switch-service/mgmt/interfaces"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Symbols defined in public import of interfaces/aggregate.proto.

type AggregateIntf = interfaces.AggregateIntf
type CreateAggregateIntfRequest = interfaces.CreateAggregateIntfRequest
type DeleteAggregateIntfRequest = interfaces.DeleteAggregateIntfRequest
type AddEthernetIntfToAggregateIntfRequest = interfaces.AddEthernetIntfToAggregateIntfRequest
type RemoveEthernetIntfFromAggregateIntfRequest = interfaces.RemoveEthernetIntfFromAggregateIntfRequest

// Symbols defined in public import of interfaces/ethernet.proto.

type EthernetIntf = interfaces.EthernetIntf
type AddIpv4AddrToEthernetIntfRequest = interfaces.AddIpv4AddrToEthernetIntfRequest
type RemoveIpv4AddrFromEthernetIntfRequest = interfaces.RemoveIpv4AddrFromEthernetIntfRequest

type Vlan_Mode int32

const (
	Vlan_ACCESS Vlan_Mode = 0
	Vlan_NATIVE Vlan_Mode = 1
	Vlan_TRUNK  Vlan_Mode = 2
)

// Enum value maps for Vlan_Mode.
var (
	Vlan_Mode_name = map[int32]string{
		0: "ACCESS",
		1: "NATIVE",
		2: "TRUNK",
	}
	Vlan_Mode_value = map[string]int32{
		"ACCESS": 0,
		"NATIVE": 1,
		"TRUNK":  2,
	}
)

func (x Vlan_Mode) Enum() *Vlan_Mode {
	p := new(Vlan_Mode)
	*p = x
	return p
}

func (x Vlan_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Vlan_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_vlan_vlan_proto_enumTypes[0].Descriptor()
}

func (Vlan_Mode) Type() protoreflect.EnumType {
	return &file_vlan_vlan_proto_enumTypes[0]
}

func (x Vlan_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Vlan_Mode.Descriptor instead.
func (Vlan_Mode) EnumDescriptor() ([]byte, []int) {
	return file_vlan_vlan_proto_rawDescGZIP(), []int{0, 0}
}

type Vlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid  uint32    `protobuf:"varint,1,opt,name=vid,proto3" json:"vid,omitempty"`
	Mode Vlan_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=vlan.Vlan_Mode" json:"mode,omitempty"`
}

func (x *Vlan) Reset() {
	*x = Vlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlan_vlan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vlan) ProtoMessage() {}

func (x *Vlan) ProtoReflect() protoreflect.Message {
	mi := &file_vlan_vlan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vlan.ProtoReflect.Descriptor instead.
func (*Vlan) Descriptor() ([]byte, []int) {
	return file_vlan_vlan_proto_rawDescGZIP(), []int{0}
}

func (x *Vlan) GetVid() uint32 {
	if x != nil {
		return x.Vid
	}
	return 0
}

func (x *Vlan) GetMode() Vlan_Mode {
	if x != nil {
		return x.Mode
	}
	return Vlan_ACCESS
}

type CreateVlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vlan *Vlan `protobuf:"bytes,1,opt,name=vlan,proto3" json:"vlan,omitempty"`
}

func (x *CreateVlanRequest) Reset() {
	*x = CreateVlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlan_vlan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVlanRequest) ProtoMessage() {}

func (x *CreateVlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vlan_vlan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVlanRequest.ProtoReflect.Descriptor instead.
func (*CreateVlanRequest) Descriptor() ([]byte, []int) {
	return file_vlan_vlan_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVlanRequest) GetVlan() *Vlan {
	if x != nil {
		return x.Vlan
	}
	return nil
}

type DeleteVlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vlan *Vlan `protobuf:"bytes,1,opt,name=vlan,proto3" json:"vlan,omitempty"`
}

func (x *DeleteVlanRequest) Reset() {
	*x = DeleteVlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlan_vlan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVlanRequest) ProtoMessage() {}

func (x *DeleteVlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vlan_vlan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVlanRequest.ProtoReflect.Descriptor instead.
func (*DeleteVlanRequest) Descriptor() ([]byte, []int) {
	return file_vlan_vlan_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteVlanRequest) GetVlan() *Vlan {
	if x != nil {
		return x.Vlan
	}
	return nil
}

type AddAggregateIntfToVlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vlan     *Vlan                       `protobuf:"bytes,1,opt,name=vlan,proto3" json:"vlan,omitempty"`
	AggIntfs []*interfaces.AggregateIntf `protobuf:"bytes,2,rep,name=aggIntfs,proto3" json:"aggIntfs,omitempty"`
}

func (x *AddAggregateIntfToVlanRequest) Reset() {
	*x = AddAggregateIntfToVlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlan_vlan_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAggregateIntfToVlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAggregateIntfToVlanRequest) ProtoMessage() {}

func (x *AddAggregateIntfToVlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vlan_vlan_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAggregateIntfToVlanRequest.ProtoReflect.Descriptor instead.
func (*AddAggregateIntfToVlanRequest) Descriptor() ([]byte, []int) {
	return file_vlan_vlan_proto_rawDescGZIP(), []int{3}
}

func (x *AddAggregateIntfToVlanRequest) GetVlan() *Vlan {
	if x != nil {
		return x.Vlan
	}
	return nil
}

func (x *AddAggregateIntfToVlanRequest) GetAggIntfs() []*interfaces.AggregateIntf {
	if x != nil {
		return x.AggIntfs
	}
	return nil
}

type RemoveAggregateIntfFromVlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vlan     *Vlan                       `protobuf:"bytes,1,opt,name=vlan,proto3" json:"vlan,omitempty"`
	AggIntfs []*interfaces.AggregateIntf `protobuf:"bytes,2,rep,name=aggIntfs,proto3" json:"aggIntfs,omitempty"`
}

func (x *RemoveAggregateIntfFromVlanRequest) Reset() {
	*x = RemoveAggregateIntfFromVlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlan_vlan_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAggregateIntfFromVlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAggregateIntfFromVlanRequest) ProtoMessage() {}

func (x *RemoveAggregateIntfFromVlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vlan_vlan_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAggregateIntfFromVlanRequest.ProtoReflect.Descriptor instead.
func (*RemoveAggregateIntfFromVlanRequest) Descriptor() ([]byte, []int) {
	return file_vlan_vlan_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveAggregateIntfFromVlanRequest) GetVlan() *Vlan {
	if x != nil {
		return x.Vlan
	}
	return nil
}

func (x *RemoveAggregateIntfFromVlanRequest) GetAggIntfs() []*interfaces.AggregateIntf {
	if x != nil {
		return x.AggIntfs
	}
	return nil
}

type AddEthernetIntfToVlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vlan     *Vlan                      `protobuf:"bytes,1,opt,name=vlan,proto3" json:"vlan,omitempty"`
	EthIntfs []*interfaces.EthernetIntf `protobuf:"bytes,2,rep,name=ethIntfs,proto3" json:"ethIntfs,omitempty"`
}

func (x *AddEthernetIntfToVlanRequest) Reset() {
	*x = AddEthernetIntfToVlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlan_vlan_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEthernetIntfToVlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEthernetIntfToVlanRequest) ProtoMessage() {}

func (x *AddEthernetIntfToVlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vlan_vlan_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEthernetIntfToVlanRequest.ProtoReflect.Descriptor instead.
func (*AddEthernetIntfToVlanRequest) Descriptor() ([]byte, []int) {
	return file_vlan_vlan_proto_rawDescGZIP(), []int{5}
}

func (x *AddEthernetIntfToVlanRequest) GetVlan() *Vlan {
	if x != nil {
		return x.Vlan
	}
	return nil
}

func (x *AddEthernetIntfToVlanRequest) GetEthIntfs() []*interfaces.EthernetIntf {
	if x != nil {
		return x.EthIntfs
	}
	return nil
}

type RemoveEthernetIntfFromVlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vlan     *Vlan                      `protobuf:"bytes,1,opt,name=vlan,proto3" json:"vlan,omitempty"`
	EthIntfs []*interfaces.EthernetIntf `protobuf:"bytes,2,rep,name=ethIntfs,proto3" json:"ethIntfs,omitempty"`
}

func (x *RemoveEthernetIntfFromVlanRequest) Reset() {
	*x = RemoveEthernetIntfFromVlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlan_vlan_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveEthernetIntfFromVlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveEthernetIntfFromVlanRequest) ProtoMessage() {}

func (x *RemoveEthernetIntfFromVlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vlan_vlan_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveEthernetIntfFromVlanRequest.ProtoReflect.Descriptor instead.
func (*RemoveEthernetIntfFromVlanRequest) Descriptor() ([]byte, []int) {
	return file_vlan_vlan_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveEthernetIntfFromVlanRequest) GetVlan() *Vlan {
	if x != nil {
		return x.Vlan
	}
	return nil
}

func (x *RemoveEthernetIntfFromVlanRequest) GetEthIntfs() []*interfaces.EthernetIntf {
	if x != nil {
		return x.EthIntfs
	}
	return nil
}

var File_vlan_vlan_proto protoreflect.FileDescriptor

var file_vlan_vlan_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x76, 0x6c, 0x61, 0x6e, 0x2f, 0x76, 0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x1a, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2f,
	0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68,
	0x0a, 0x04, 0x56, 0x6c, 0x61, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x2e, 0x56, 0x6c,
	0x61, 0x6e, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x29, 0x0a,
	0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x41, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x10, 0x02, 0x22, 0x33, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x04, 0x76, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x6c,
	0x61, 0x6e, 0x2e, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x22, 0x33, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x2e, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x76, 0x6c,
	0x61, 0x6e, 0x22, 0x76, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x66, 0x54, 0x6f, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x2e, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x76,
	0x6c, 0x61, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x61, 0x67, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x66,
	0x52, 0x08, 0x61, 0x67, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x22, 0x7b, 0x0a, 0x22, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x66, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x2e, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x76, 0x6c, 0x61, 0x6e,
	0x12, 0x35, 0x0a, 0x08, 0x61, 0x67, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x66, 0x52, 0x08, 0x61,
	0x67, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x22, 0x74, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x45, 0x74,
	0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x66, 0x54, 0x6f, 0x56, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x2e, 0x56, 0x6c, 0x61,
	0x6e, 0x52, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x74, 0x68, 0x49, 0x6e,
	0x74, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x49,
	0x6e, 0x74, 0x66, 0x52, 0x08, 0x65, 0x74, 0x68, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x22, 0x79, 0x0a,
	0x21, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x49,
	0x6e, 0x74, 0x66, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x2e, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x76, 0x6c,
	0x61, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x74, 0x68, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x66, 0x52, 0x08,
	0x65, 0x74, 0x68, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x42, 0x26, 0x5a, 0x24, 0x6f, 0x70, 0x65, 0x6e,
	0x6e, 0x6f, 0x73, 0x2d, 0x65, 0x74, 0x68, 0x2d, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x6c, 0x61, 0x6e,
	0x50, 0x00, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vlan_vlan_proto_rawDescOnce sync.Once
	file_vlan_vlan_proto_rawDescData = file_vlan_vlan_proto_rawDesc
)

func file_vlan_vlan_proto_rawDescGZIP() []byte {
	file_vlan_vlan_proto_rawDescOnce.Do(func() {
		file_vlan_vlan_proto_rawDescData = protoimpl.X.CompressGZIP(file_vlan_vlan_proto_rawDescData)
	})
	return file_vlan_vlan_proto_rawDescData
}

var file_vlan_vlan_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vlan_vlan_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_vlan_vlan_proto_goTypes = []interface{}{
	(Vlan_Mode)(0),                             // 0: vlan.Vlan.Mode
	(*Vlan)(nil),                               // 1: vlan.Vlan
	(*CreateVlanRequest)(nil),                  // 2: vlan.CreateVlanRequest
	(*DeleteVlanRequest)(nil),                  // 3: vlan.DeleteVlanRequest
	(*AddAggregateIntfToVlanRequest)(nil),      // 4: vlan.AddAggregateIntfToVlanRequest
	(*RemoveAggregateIntfFromVlanRequest)(nil), // 5: vlan.RemoveAggregateIntfFromVlanRequest
	(*AddEthernetIntfToVlanRequest)(nil),       // 6: vlan.AddEthernetIntfToVlanRequest
	(*RemoveEthernetIntfFromVlanRequest)(nil),  // 7: vlan.RemoveEthernetIntfFromVlanRequest
	(*interfaces.AggregateIntf)(nil),           // 8: interfaces.AggregateIntf
	(*interfaces.EthernetIntf)(nil),            // 9: interfaces.EthernetIntf
}
var file_vlan_vlan_proto_depIdxs = []int32{
	0,  // 0: vlan.Vlan.mode:type_name -> vlan.Vlan.Mode
	1,  // 1: vlan.CreateVlanRequest.vlan:type_name -> vlan.Vlan
	1,  // 2: vlan.DeleteVlanRequest.vlan:type_name -> vlan.Vlan
	1,  // 3: vlan.AddAggregateIntfToVlanRequest.vlan:type_name -> vlan.Vlan
	8,  // 4: vlan.AddAggregateIntfToVlanRequest.aggIntfs:type_name -> interfaces.AggregateIntf
	1,  // 5: vlan.RemoveAggregateIntfFromVlanRequest.vlan:type_name -> vlan.Vlan
	8,  // 6: vlan.RemoveAggregateIntfFromVlanRequest.aggIntfs:type_name -> interfaces.AggregateIntf
	1,  // 7: vlan.AddEthernetIntfToVlanRequest.vlan:type_name -> vlan.Vlan
	9,  // 8: vlan.AddEthernetIntfToVlanRequest.ethIntfs:type_name -> interfaces.EthernetIntf
	1,  // 9: vlan.RemoveEthernetIntfFromVlanRequest.vlan:type_name -> vlan.Vlan
	9,  // 10: vlan.RemoveEthernetIntfFromVlanRequest.ethIntfs:type_name -> interfaces.EthernetIntf
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_vlan_vlan_proto_init() }
func file_vlan_vlan_proto_init() {
	if File_vlan_vlan_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vlan_vlan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlan_vlan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlan_vlan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlan_vlan_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAggregateIntfToVlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlan_vlan_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAggregateIntfFromVlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlan_vlan_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEthernetIntfToVlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlan_vlan_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveEthernetIntfFromVlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vlan_vlan_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vlan_vlan_proto_goTypes,
		DependencyIndexes: file_vlan_vlan_proto_depIdxs,
		EnumInfos:         file_vlan_vlan_proto_enumTypes,
		MessageInfos:      file_vlan_vlan_proto_msgTypes,
	}.Build()
	File_vlan_vlan_proto = out.File
	file_vlan_vlan_proto_rawDesc = nil
	file_vlan_vlan_proto_goTypes = nil
	file_vlan_vlan_proto_depIdxs = nil
}
